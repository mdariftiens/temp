app/Helpers/DBCompatibleFunctions.php

function long_listagg($column, $alias=''){
    if (isOracle()){
        return "rtrim(
                        xmlagg(xmlelement(e,$column,',').extract('//text()') order by $column).getclobval()
                ,',') " . getAliasString($alias) ;
    }
    if (isMysql()){
        throw new Exception("long_listagg() method is only for Oracle");
    }
}



================= 
consolidateTenorEndAccrual()

if(isOracle()){

            $odt_ids = long_listagg('NVL (odt.id, NULL)','odt_ids');
            $invoice_ids = long_listagg('NVL (odt.invoice_id, NULL)','invoice_ids');
            $od_ids = long_listagg('NVL (odt.od_account_id, NULL)','od_ids');
            $interest_balance_details = long_listagg('NVL (odt.interest_balance, NULL)','interest_balance_details');
            $penal_interest_details = long_listagg('NVL (odt.penal_interest, NULL)','penal_interest_details');
            $payment_request_ids = long_listagg('NVL (odt.payment_request_id, NULL)','payment_request_ids');
            $discount_ids = long_listagg('NVL (odt.discounting_id, NULL)','discount_ids');


            $od_transactions_by_od = DB::select(DB::raw("SELECT
            $odt_ids,
            $invoice_ids,
            $od_ids,
            max(cd.is_npa) as is_npa,
            max(b.id) AS bank_id,
            max(to_char(b.configurations)) as bank_configurations,
            max(cbc.id )AS credit_to_id,
            max(cbcp.id) AS credit_penal_to_id,
            max(cb.id) AS debit_from_id,
            max(br.code) as branch_code,
            $interest_balance_details,
            $penal_interest_details,
            SUM(odt.interest_balance) AS interest_sum,
            SUM(odt.penal_interest) AS penal_sum,
            SUM(nvl(odt.interest_balance,0)) AS odt_interest_balance,
            SUM(nvl(odt.penal_interest,0)) AS odt_penal_interest,
            $payment_request_ids,
            $discount_ids,
            CASE
                 WHEN JSON_VALUE (
                          b.configurations,
                          '$.basic_configuration.dis_interest_account_branch_specific') =1
                 THEN
                     br.code ||'~'||cb.account_no
                 ELSE
                     cb.account_no
             END
             AS debit_int_from,
            CASE
                 WHEN JSON_VALUE (
                          b.configurations,
                          '$.basic_configuration.dis_penal_interest_recievable_account_branch_specific') =1
                 THEN
                     br.code ||'~'||cbp.account_no
                 ELSE
                     cbp.account_no
             END
             As debit_penal_from,

            (CASE WHEN cd.is_npa = 1
                THEN CASE WHEN JSON_VALUE(b.configurations,'$.basic_configuration.unrealised_int_acc_branch_specific') =1
                THEN
                 br.code ||'~'||cbc.account_no
                ELSE cbc.account_no
                END
             ELSE
                CASE WHEN JSON_VALUE(
                        b.configurations,'$.basic_configuration.dis_earned_interest_account_branch_specific') =1
                     THEN
                     br.code||'~'||cbc.account_no
                ELSE cbc.account_no
                END
            END
            ) AS credit_int_to,
            (CASE WHEN cd.is_npa = 1
                THEN CASE WHEN JSON_VALUE(b.configurations,'$.basic_configuration.unrealised_int_acc_branch_specific') = 1
                     THEN br.code||'~'||cbcp.account_no
                ELSE cbcp.account_no
                END
             ELSE
                CASE WHEN JSON_VALUE( b.configurations,'$.basic_configuration.dis_penal_interest_account_branch_specific') =1
                 THEN br.code||'~'||cbcp.account_no
                ELSE cbcp.account_no
                END
            END
            ) AS credit_penal_to,
            CASE
                 WHEN JSON_VALUE (b.configurations,'$.basic_configuration.round_off_repayments')IS NOT NULL
                 THEN
                     CAST (JSON_VALUE (
                             b.configurations,
                             '$.basic_configuration.round_off_repayments')
                             AS DECIMAL (4, 2))
                 ELSE
                     0
             END
             AS min_amount

            FROM
                od_transactions odt
            LEFT JOIN payment_requests pr ON
                odt.payment_request_id = pr.id
            LEFT JOIN discountings d ON
                pr.discount_id = d.id
            LEFT JOIN od_accounts od ON
                odt.od_account_id = od.id
            LEFT JOIN companies cd ON
                od.distributor_id = cd.id
            LEFT JOIN branches br ON
                cd.branch_id = br.id
            LEFT JOIN banks b ON
                od.bank_id = b.id
            LEFT JOIN company_banks cb ON
                    JSON_VALUE(b.configurations,'$.basic_configuration.dis_interest_account')
                 = cb.id
            LEFT JOIN company_banks cbp ON
                    JSON_VALUE(
                        b.configurations,
                        '$.basic_configuration.dis_penal_interest_recievable_account'
                    )= cbp.id
            LEFT JOIN company_banks cbc ON
                (CASE WHEN cd.is_npa = 1 THEN
                        JSON_VALUE(
                            b.configurations,
                            '$.basic_configuration.unrealised_int_acc')
                 ELSE
                        JSON_VALUE(
                            b.configurations,
                            '$.basic_configuration.dis_earned_interest_account')
                END) = cbc.id
            LEFT JOIN company_banks cbcp ON
                (CASE WHEN cd.is_npa = 1 THEN
                        JSON_VALUE(
                            b.configurations,
                            '$.basic_configuration.unrealised_int_acc'
                        )
                 ELSE JSON_VALUE(
                            b.configurations,
                            '$.basic_configuration.dis_penal_interest_account'
                        )
                END) = cbcp.id
            WHERE
                odt.overdue_date = '".$overdue_date."' AND
                (odt.interest_balance > 0 OR odt.penal_interest > 0)
            GROUP BY
               CASE
                WHEN JSON_VALUE (b.configurations,'$.basic_configuration.dis_interest_account_branch_specific') =1
                THEN br.code ||'~'||cb.account_no
                ELSE cb.account_no
            END,
            CASE
                WHEN cd.is_npa = 1
                THEN
                    CASE
                        WHEN JSON_VALUE (b.configurations,'$.basic_configuration.unrealised_int_acc_branch_specific') = 1
                        THEN br.code||'~'||cbc.account_no
                        ELSE cbc.account_no
                    END
                ELSE
                    CASE
                        WHEN JSON_VALUE (b.configurations, '$.basic_configuration.dis_earned_interest_account_branch_specific') =1
                        THEN br.code||'~'||cbc.account_no
                        ELSE cbc.account_no
                    END
            END,
            CASE
                WHEN JSON_VALUE (b.configurations,'$.basic_configuration.dis_penal_interest_recievable_account_branch_specific') =1
                THEN br.code||'~'||cbp.account_no
                ELSE cbp.account_no
            END,
            CASE
                WHEN cd.is_npa = 1
                THEN
                    CASE
                        WHEN JSON_VALUE (
                                 b.configurations,
                                 '$.basic_configuration.unrealised_int_acc_branch_specific') =
                             1
                        THEN
                            br.code||'~'||cbcp.account_no
                        ELSE
                            cbcp.account_no
                    END
                ELSE
                    CASE
                        WHEN JSON_VALUE (
                                 b.configurations,
                                 '$.basic_configuration.dis_penal_interest_account_branch_specific') =
                             1
                        THEN
                            br.code||'~'||cbcp.account_no
                        ELSE
                            cbcp.account_no
                    END
            END,
            CASE
                    WHEN JSON_VALUE (b.configurations,'$.basic_configuration.round_off_repayments')IS NOT NULL
                    THEN CAST (JSON_VALUE (b.configurations,'$.basic_configuration.round_off_repayments') AS DECIMAL (4, 2))
                    ELSE 0
                END
        "));
        }

================================
consolidateDailyAccrual()

if(isOracle()){


                $odt_ids = long_listagg('NVL (odt.id, NULL)','odt_ids');
                $invoice_ids = long_listagg('NVL (odt.invoice_id, NULL)','invoice_ids');
                $int_reset_dates = long_listagg('NVL (odt.int_reset_date, NULL)','int_reset_dates');
                $penal_reset_dates = long_listagg('NVL (odt.penal_reset_date, NULL)','penal_reset_dates');
                $odi_date = long_listagg('NVL (odi."DATE", NULL)','odi_date');
                $od_ids = long_listagg('NVL (od.id, NULL)','od_ids');
                $interest_balance_details = long_listagg('NVL (odi.daily_interest, NULL)','interest_balance_details');
                $penal_interest_details = long_listagg('NVL (odi.penal_interest, NULL)','penal_interest_details');
                $payment_request_ids = long_listagg('NVL (odt.payment_request_id, NULL)','payment_request_ids');
                $discount_ids = long_listagg('NVL (odt.discounting_id, NULL)','discount_ids');

                $loansByDebitCreditAc = DB::select(DB::raw("SELECT
    
                $odt_ids,
                $invoice_ids,
                $int_reset_dates,
                $penal_reset_dates,
                $odi_date,
                $od_ids,
                $interest_balance_details,
                $penal_interest_details,
                $payment_request_ids,
                $discount_ids,

         MAX (cd.is_npa)
             AS is_npa,
         MAX (b.id)
             AS bank_id,
         MAX (TO_CHAR (b.configurations))
             AS bank_configurations,
         MAX (cbc.id)
             AS credit_to_id,
         MAX (cbcp.id)
             AS credit_penal_to_id,
         MAX (cb.id)
             AS debit_from_id,
         MAX (br.code)
             AS branch_code,
         SUM (odi.daily_interest)
             AS interest_sum,
         SUM (odi.penal_interest)
             AS penal_sum,
         SUM (NVL (odt.interest_balance, 0))
             odt_interest_balance,
         SUM (NVL (odt.penal_interest, 0))
             odt_penal_interest,
             CASE
                 WHEN JSON_VALUE (
                          b.configurations,
                          '$.basic_configuration.dis_interest_account_branch_specific') =1
                 THEN
                     br.code ||'~'||cb.account_no
                 ELSE
                     cb.account_no
             END
             AS debit_int_from,
             CASE
                 WHEN JSON_VALUE (
                          b.configurations,
                          '$.basic_configuration.dis_penal_interest_recievable_account_branch_specific') =
                      1
                 THEN
                     br.code ||'~'||cbp.account_no
                 ELSE
                     cbp.account_no
             END
             As debit_penal_from,
             CASE
                 WHEN cd.is_npa = 1
                 THEN
                     CASE
                         WHEN JSON_VALUE (
                                  b.configurations,
                                  '$.basic_configuration.unrealised_int_acc_branch_specific') =
                              1
                         THEN
                             br.code ||'~'||cbc.account_no
                         ELSE
                             cbc.account_no
                     END
                 ELSE
                     CASE
                         WHEN JSON_VALUE (
                                  b.configurations,
                                  '$.basic_configuration.dis_earned_interest_account_branch_specific') =
                              1
                         THEN
                             br.code ||'~'||cbc.account_no
                         ELSE
                             cbc.account_no
                     END
             END
            AS credit_int_to,
             CASE
                 WHEN cd.is_npa = 1
                 THEN
                     CASE
                         WHEN JSON_VALUE (
                                  b.configurations,
                                  '$.basic_configuration.unrealised_int_acc_branch_specific') =
                              1
                         THEN
                             br.code ||'~'||cbcp.account_no
                         ELSE
                             cbcp.account_no
                     END
                 ELSE
                     CASE
                         WHEN JSON_VALUE (
                                  b.configurations,
                                  '$.basic_configuration.dis_penal_interest_account_branch_specific') =
                              1
                         THEN
                             br.code ||'~'||cbcp.account_no
                         ELSE
                             cbcp.account_no
                     END
             END
            AS credit_penal_to,
             CASE
                 WHEN JSON_VALUE (b.configurations,
                                  '$.basic_configuration.round_off_repayments')
                          IS NOT NULL
                 THEN
                     CAST (
                         JSON_VALUE (
                             b.configurations,
                             '$.basic_configuration.round_off_repayments')
                             AS DECIMAL (4, 2))
                 ELSE
                     0
             END
             AS min_amount
       FROM OD_DAILY_INTEREST odi
            LEFT JOIN OD_TRANSACTIONS odt
                ON ODI.OD_TRANSACTION_ID = ODT.ID
            LEFT JOIN PAYMENT_REQUESTS pr
                ON ODT.PAYMENT_REQUEST_ID = PR.ID
            LEFT JOIN DISCOUNTINGS d ON PR.DISCOUNT_ID = D.ID
            LEFT JOIN OD_ACCOUNTS od ON ODT.OD_ACCOUNT_ID = OD.ID
            LEFT JOIN COMPANIES cd ON OD.DISTRIBUTOR_ID = CD.ID
            LEFT JOIN BRANCHES br ON CD.BRANCH_ID = BR.ID
            LEFT JOIN BANKS b ON OD.BANK_ID = B.ID
            LEFT JOIN COMPANY_BANKS cb
                ON JSON_VALUE (b.configurations,
                               '$.basic_configuration.dis_interest_account') =
                   CB.ID
            LEFT JOIN COMPANY_BANKS cbp
                ON JSON_VALUE (
                       b.configurations,
                       '$.basic_configuration.dis_penal_interest_recievable_account') =
                   CBP.ID
            LEFT JOIN COMPANY_BANKS cbc
                ON (CASE
                        WHEN cd.is_npa = 1
                        THEN
                            JSON_VALUE (
                                b.configurations,
                                '$.basic_configuration.unrealised_int_acc')
                        ELSE
                            JSON_VALUE (
                                b.configurations,
                                '$.basic_configuration.dis_earned_interest_account')
                    END) =
                   CBC.ID
            LEFT JOIN COMPANY_BANKS cbcp
                ON (CASE
                        WHEN cd.is_npa = 1
                        THEN
                            JSON_VALUE (
                                b.configurations,
                                '$.basic_configuration.unrealised_int_acc')
                        ELSE
                            JSON_VALUE (
                                b.configurations,
                                '$.basic_configuration.dis_penal_interest_account')
                    END) =
                   CBCP.ID
                    WHERE
                     (d.status = 7
                 OR odt.credit_type_id = -1
                 OR odt.credit_type_id = 2
                 OR odt.credit_type_id = -2)
              and (odi.\"DATE\") = to_date('$date','yyyy-mm-dd')
             and odt.last_cron_accrual_date < to_date('$date','yyyy-mm-dd')
            AND (   odt.balance > 0
                 OR odt.interest_balance > 0
                 OR odt.penal_interest > 0)
    GROUP BY
           CASE
                WHEN JSON_VALUE (b.configurations,'$.basic_configuration.dis_interest_account_branch_specific') =1
                THEN br.code ||'~'||cb.account_no
                ELSE cb.account_no
            END,
            CASE
                WHEN cd.is_npa = 1
                THEN
                    CASE
                        WHEN JSON_VALUE (b.configurations,'$.basic_configuration.unrealised_int_acc_branch_specific') = 1
                        THEN br.code ||'~'||cbc.account_no
                        ELSE cbc.account_no
                    END
                ELSE
                    CASE
                        WHEN JSON_VALUE (b.configurations, '$.basic_configuration.dis_earned_interest_account_branch_specific') =1
                        THEN br.code ||'~'||cbc.account_no
                        ELSE cbc.account_no
                    END
            END,
            CASE
                WHEN JSON_VALUE (b.configurations,'$.basic_configuration.dis_penal_interest_recievable_account_branch_specific') =1
                THEN br.code ||'~'||cbp.account_no
                ELSE cbp.account_no
            END,
            CASE
                WHEN cd.is_npa = 1
                THEN
                    CASE
                        WHEN JSON_VALUE (
                                 b.configurations,
                                 '$.basic_configuration.unrealised_int_acc_branch_specific') =
                             1
                        THEN
                            br.code ||'~'||cbcp.account_no
                        ELSE
                            cbcp.account_no
                    END
                ELSE
                    CASE
                        WHEN JSON_VALUE (
                                 b.configurations,
                                 '$.basic_configuration.dis_penal_interest_account_branch_specific') =
                             1
                        THEN
                            br.code ||'~'||cbcp.account_no
                        ELSE
                            cbcp.account_no
                    END
            END,
            CASE
                    WHEN JSON_VALUE (b.configurations,'$.basic_configuration.round_off_repayments')IS NOT NULL
                    THEN CAST (JSON_VALUE (b.configurations,'$.basic_configuration.round_off_repayments') AS DECIMAL (4, 2))
                    ELSE 0
                END"));

            }



===================
 in app/Repository/Eloquent/InvoiceRepo.php -> getAllApproversWithUsers()

->select(DB::raw("
                                    $max(auth_matrix_pending_approvals.id) as id,
                                    $max(auth_matrix_pending_approvals.updated_at) as updated_at,
                                    $max(u.name) as name,
                                    $max(u.email) as email,
                                    $max(auth_matrix_pending_approvals.status) as status
                                "))


various.php
============
    function getExcessCreditByOd($odId) {
        return DB::table('od_transactions')
        ->select(DB::raw(ifNull('sum(credit_balance)',0) . ' as credit_balance'))
        ->where('od_account_id', $odId)
        ->first();
    }


public/uploads/df_migration.csv
=======
Sr No,Date (dd-mm-yyyy),OD Account No,Invoice Reference,Type,Due Date (dd-mm-yyyy),Debit,Credit,Balance,Accrued Interest Balance,Penal Interest Balance,As of (dd-mm-yyyy),Discounting Status,Transaction Reference,Drawdown Fees,Result
1,13-06-2023,ODACC1,FIAT PUNTO+KA51ME4690,Drawdown,14-06-2023,"1,59,750",,"1,60,877",100,50,13-06-2023,Disbursed,43234,250,
2,13-06-2023,ODACC1,FIAT PUNTO+KA51ME4690,Fees,14-06-2023,300,,,85,34,13-06-2023,,4546567,,
3,13-06-2023,ODACC1,FIAT PUNTO+KA51ME4690,Interest Posting,14-06-2023,827,,,87,48,13-06-2023,,,,
4,13-06-2023,ODACC2,FIAT PUNTO+KA51ME4691,Repayment,14-06-2023,,"5,000",,,,,,,,
5,13-06-2023,ODACC3,FIAT PUNTO+KA51ME4692,Penal Interest,14-06-2023,500,,450,72,18,13-06-2023,,8758564,,
6,13-06-2023,OX2001,,Offline Debit,,5000,,500,,,13-06-2023,,,,



==== session kill ===
SELECT s.inst_id,
s.sid,
s.serial#,
--s.sql_id,
p.spid,
s.username,
s.program
FROM gv$session s
JOIN gv$process p ON p.addr = s.paddr AND p.inst_id = s.inst_id
WHERE s.type != 'BACKGROUND';


alter system kill session '52, 38267';
commit;

alter system kill session '51, 57113';

alter system kill session '262, 55222';
